name: install node modules
description: 'GitHub Action to install and cache Node.js tools'
author: 'Office TECOLI, LLC'
branding: 
  color: orange
  icon:  type

inputs:
  root:  { required: false, type: string, default: . }
  cache: { required: false, type: string, default: yes }
  key:   { required: false, type: string }

outputs:
  cache-hit:
    value: ${{ steps.cache.outputs.cache-hit }}

runs:
  using: composite
  steps:

    - id: setup
      shell: bash
      run: |
        : setup install-node-modules
        case "${{ inputs.cache }}" in
            yes|workflow) cache="${{ inputs.cache }}" ;;
            *)            cache=no ;;
        esac
        node -v
        file_hash="${{ hashFiles(format('{0}/**/package-lock.json', inputs.root), format('{0}/**/yarn.lock', inputs.root)) }}"
        given_key="${{ inputs.key }}"
        version_key="$( (uname -mrsv; node -v) | (md5sum||md5) | awk '{print $1}' )"
        key="${given_key:+$given_key-}${version_key}-${file_hash}"
        [ "$cache" == 'workflow' ] && \
            key+="-${{ github.run_id }}-${{ github.run_attempt }}"
        path=$(npm config get cache)
        sed 's/^ *//' << END >> $GITHUB_OUTPUT
            cache=$cache
            path=$path
            key=$key
        END

    - id: cache
      if: steps.setup.outputs.cache != 'no'
      uses: actions/cache@v4
      with:
        path: ${{ steps.setup.outputs.path }}
        key:  ${{ steps.setup.outputs.key }}

    - id: install
      shell: bash
      run: |
        : install
        root="${{ inputs.root }}"
        for path in $( \
            find $root \
                \( -name node_modules -prune \) -o \
                \( \( -name package-lock.json -o -name yarn.lock \) -a -print \) \
        )
        do
            lock=$(basename $path)
            dir=$(dirname $path)
            if [ -d $dir/node_modules ]
            then
                echo "skip $dir"
            else
                echo "configure $dir"
                case $lock in
                    package-lock.json)
                        (cd $dir && npm install) ;;
                    yarn.lock)
                        (cd $dir && yarn --check-files --frozen-lockfile --non-interactive) ;;
                esac
            fi
        done
